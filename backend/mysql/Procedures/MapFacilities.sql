SET SQL_SAFE_UPDATES=0;
DELIMITER $$
-- DROP PROCEDURE MAPFACILITES 
CREATE PROCEDURE MAPFACILITES(VAR_BILLER_ID INT, VAR_UPLOAD_MONTH INT, VAR_UPLOAD_YEAR INT, IS_COGS INT)
BEGIN
	IF IS_COGS = 1 THEN
		DROP TABLE IF EXISTS cogstage;
		CREATE TEMPORARY TABLE cogstage AS
		SELECT 
		a.* FROM CogsStaging a 
		WHERE `UPLOAD_MONTH` = VAR_UPLOAD_MONTH AND `UPLOAD_YEAR` = VAR_UPLOAD_YEAR;
		SELECT DISTINCT
			c.TITLE as FACILITY_NAME,
			d.TITLE as REP_NAME,
			a.FACILITY_NAME as RAW_FACILITY_NAME,
			a.UPLOAD_MONTH,
			a.UPLOAD_YEAR
		FROM cogstage a 
		LEFT JOIN Facilities_Rep_Map b ON LOWER(a.FACILITY_NAME) = LOWER(b.UGLY_FACILITY) 
		LEFT JOIN Reps d ON b.REP_ID = d.ID 
		LEFT JOIN Facilities c ON b.FACILITY_ID = c.ID
		WHERE b.REP_ID IS NULL AND (a.FACILITY_NAME IS NOT NULL AND a.FACILITY_NAME <> '');    
    ELSE
		DROP TABLE IF EXISTS paidstage;
		CREATE TEMPORARY TABLE paidstage AS
		SELECT 
		a.* FROM PaidBDSStaging a 
		WHERE `UPLOAD_MONTH` = VAR_UPLOAD_MONTH AND `UPLOAD_YEAR` = VAR_UPLOAD_YEAR AND `BILLER_ID` = VAR_BILLER_ID;
		SELECT DISTINCT
			a.BILLER_ID,
			c.TITLE as FACILITY_NAME,
			d.TITLE as REP_NAME,
		 	b.FACILITY_ID,
			b.REP_ID,
			a.FACILITY_NAME as RAW_FACILITY_NAME,
			a.UPLOAD_MONTH,
			a.UPLOAD_YEAR,
			e.TITLE as BILLER_NAME
		FROM paidstage a 
		LEFT JOIN Facilities_Rep_Map b ON UPPER(a.FACILITY_NAME) = UPPER(b.UGLY_FACILITY) 
		LEFT JOIN Reps d ON b.REP_ID = d.ID 
		LEFT JOIN Facilities c ON b.FACILITY_ID = c.ID
		LEFT JOIN Billers e ON a.BILLER_ID = e.ID
		WHERE b.REP_ID IS NULL OR b.FACILITY_ID IS NULL AND (a.FACILITY_NAME IS NOT NULL AND a.FACILITY_NAME <> ''); 
    END IF;
END$$
DELIMITER ;
