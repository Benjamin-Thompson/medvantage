-- DROP PROCEDURE LOADTODATABASE
SET SQL_SAFE_UPDATES=0;
DELIMITER $$
CREATE PROCEDURE LOADTODATABASE(VAR_BILLER_ID int, VAR_MONTH int, VAR_YEAR int, IS_COGS INT)
BEGIN
	DROP TABLE IF EXISTS realMap;
	CREATE TEMPORARY TABLE IF NOT EXISTS realMap AS 
    SELECT DISTINCT LOWER(UGLY_FACILITY) AS UGLY_FACILITY, REP_ID, FACILITY_ID FROM Facilities_Rep_Map;
	IF IS_COGS = 1 THEN
		DELETE FROM Cogs
		WHERE UPLOAD_MONTH = VAR_MONTH AND UPLOAD_YEAR = VAR_YEAR;
		INSERT INTO Cogs
        SELECT @r := @r + 1 as ID, bb.* FROM (
		SELECT
			-- @r := @r + 1 as ID,
			a.LINE_ID, 
			c.REP_ID as REP_ID,
            d.TITLE as REP_NAME,
			c.ID as FACILITY_ID,
			c.TITLE as FACILITY_NAME,
			a.FACILITY_NAME as RAW_FACILITY_NAME,
			a.COG_DATE, 
			a.TRANSACTION_TYPE, 
			a.AMOUNT, 
			a.ID_NUM, 
			a.DESC_NAME, 
			a.DESCRIPTION,         
			a.UPLOAD_MONTH,
			a.UPLOAD_YEAR,
			FALSE as MAPPED,
			a.CREATED_DATE, 
			a.CREATED_BY, 
			a.MODIFIED_DATE, 
			a.MODIFIED_BY
		FROM CogsStaging a
		LEFT JOIN realMap b ON LOWER(a.FACILITY_NAME) = b.UGLY_FACILITY 
		LEFT JOIN Facilities c ON b.FACILITY_ID = c.ID
        LEFT JOIN Reps d ON d.ID = b.REP_ID
        WHERE a.UPLOAD_MONTH = VAR_MONTH AND a.UPLOAD_YEAR = VAR_YEAR) bb,
		(SELECT @r := (SELECT IFNULL(MAX(ID), 0) FROM Cogs)) aa; 
		
		
        UPDATE Billers
        SET LAST_UPLOAD_MONTH = VAR_MONTH, LAST_UPLOAD_YEAR = VAR_YEAR WHERE TITLE = 'COGS';
		SELECT * FROM Cogs WHERE UPLOAD_MONTH = VAR_MONTH AND UPLOAD_YEAR = VAR_YEAR LIMIT 100; 
              
    
    ELSE
		DELETE FROM PaidBDS
		WHERE BILLER_ID = VAR_BILLER_ID AND UPLOAD_MONTH = VAR_MONTH AND UPLOAD_YEAR = VAR_YEAR;
		INSERT INTO PaidBDS
        SELECT @r := @r + 1 as ID, bb.* FROM (
		SELECT
			-- @r := @r + 1 as ID,
			a.LINE_ID, 
			d.TITLE as REP_NAME,
			c.REP_ID as REP_ID,
			c.ID as FACILITY_ID,
			c.TITLE as FACILITY_NAME,
			a.FACILITY_NAME as RAW_FACILITY_NAME,
			a.PATIENT_LAST_NAME, 
			a.PATIENT_FIRST_NAME, 
			a.DATE_OF_SERVICE, 
			a.PAID_AMOUNT, 
			a.PAID_DATE, 
			a.INSURANCE_COMPANY,         
			a.UPLOAD_MONTH,
			a.UPLOAD_YEAR,
			FALSE as MAPPED,
			a.BILLER_ID,
			e.TITLE as BILLER_TITLE,
			a.CREATED_DATE, 
			a.CREATED_BY, 
			a.MODIFIED_DATE, 
			a.MODIFIED_BY
		FROM PaidBDSStaging a
		LEFT JOIN realMap b ON LOWER(a.FACILITY_NAME) = b.UGLY_FACILITY
		LEFT JOIN Facilities c ON b.FACILITY_ID = c.ID
        LEFT JOIN Reps d ON d.ID = b.REP_ID
		LEFT JOIN Billers e ON a.BILLER_ID = e.ID
        WHERE a.BILLER_ID = VAR_BILLER_ID AND a.UPLOAD_MONTH = VAR_MONTH AND a.UPLOAD_YEAR = VAR_YEAR) bb,
		(SELECT @r := (SELECT IFNULL(MAX(ID), 0) FROM PaidBDS)) aa;
		
		
        UPDATE Billers
        SET LAST_UPLOAD_MONTH = VAR_MONTH, LAST_UPLOAD_YEAR = VAR_YEAR WHERE ID = VAR_BILLER_ID;        
		SELECT * FROM PaidBDS WHERE BILLER_ID = VAR_BILLER_ID AND UPLOAD_MONTH = VAR_MONTH AND UPLOAD_YEAR = VAR_YEAR LIMIT 100; 
    END IF;
END$$
DELIMITER ;