SET SQL_SAFE_UPDATES=0;
-- DROP PROCEDURE LOADDASHBOARD
DELIMITER $$
CREATE PROCEDURE LOADDASHBOARD(VAR_REP_ID INT, VAR_UPLOAD_MONTH INT, VAR_UPLOAD_YEAR INT)
BEGIN
	SET @Commission = (SELECT IFNULL(COMMISSION,0) FROM Reps WHERE ID = VAR_REP_ID);
                        
	SET @FULLPAID = (SELECT IFNULL(SUM(PAID_AMOUNT),0) FROM PaidBDS 
						WHERE REP_ID = VAR_REP_ID AND UPLOAD_MONTH = VAR_UPLOAD_MONTH AND UPLOAD_YEAR = VAR_UPLOAD_YEAR);
                        
	SET @FULLCOGS = (SELECT IFNULL(SUM(AMOUNT),0) FROM Cogs 
						WHERE REP_ID = VAR_REP_ID AND UPLOAD_MONTH = VAR_UPLOAD_MONTH AND UPLOAD_YEAR = VAR_UPLOAD_YEAR);
                        
    SET @INITIALPAID = (SELECT IFNULL(SUM(PAID_AMOUNT),0) FROM PaidBDS 
						WHERE REP_ID = VAR_REP_ID AND UPLOAD_MONTH = VAR_UPLOAD_MONTH AND UPLOAD_YEAR = VAR_UPLOAD_YEAR AND 
                        FACILITY_ID NOT IN (SELECT FACILITY_ID FROM Special_Commissions WHERE REP_ID = VAR_REP_ID));      
                        
    SET @INITIALCOGS = (SELECT IFNULL(SUM(AMOUNT), 0) FROM Cogs 
						WHERE REP_ID = VAR_REP_ID AND UPLOAD_MONTH = VAR_UPLOAD_MONTH AND UPLOAD_YEAR = VAR_UPLOAD_YEAR AND 
                        FACILITY_ID NOT IN (SELECT FACILITY_ID FROM Special_Commissions WHERE REP_ID = VAR_REP_ID)); 
    
    SET @INITIALCOMMISSION = (SELECT IFNULL(((@INITIALPAID - @INITIALCOGS) * @Commission),0));
    
    SET @MANUALOVERRIDECOMMISSION = (SELECT IFNULL(SUM(AMOUNT), 0) FROM Manual_Overrides WHERE REP_ID = VAR_REP_ID AND UPLOAD_MONTH = VAR_UPLOAD_MONTH AND UPLOAD_YEAR = VAR_UPLOAD_YEAR);
    
	-- Special
    
    SET @SPECIALCOMMISSION = (SELECT IFNULL(SUM((PAID_AMOUNT - AMOUNT) * COMMISSION), 0) as COMMISSIONS FROM (
    SELECT 
    a.FACILITY_ID, 
    IFNULL(a.PAID_AMOUNT, 0) as PAID_AMOUNT,
    IFNULL(b.AMOUNT, 0) as AMOUNT,
    IFNULL(c.COMMISSION, 0) as COMMISSION
    FROM 
    (SELECT 
		a.FACILITY_ID,
        SUM(a.PAID_AMOUNT) as PAID_AMOUNT
	FROM PaidBDS a
    WHERE a.FACILITY_ID IN (SELECT FACILITY_ID FROM Special_Commissions WHERE REP_ID = VAR_REP_ID)
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.FACILITY_ID) a
    LEFT JOIN
     (SELECT 
		a.FACILITY_ID,
        SUM(a.AMOUNT) as AMOUNT
	FROM Cogs a
    WHERE a.FACILITY_ID IN (SELECT FACILITY_ID FROM Special_Commissions WHERE REP_ID = VAR_REP_ID) 
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.FACILITY_ID) b ON a.FACILITY_ID = b.FACILITY_ID
    LEFT JOIN Special_Commissions c ON a.FACILITY_ID = c.FACILITY_ID AND c.REP_ID = VAR_REP_ID) p);
    
    -- Facility
    DROP TABLE IF EXISTS FACILITYOVERRIDECOMMISSION;
    CREATE TEMPORARY TABLE FACILITYOVERRIDECOMMISSION AS
    SELECT IFNULL(SUM(PAID_AMOUNT), 0) as PAID_AMOUNT, IFNULL(SUM(AMOUNT), 0) as COGS, IFNULL(SUM((PAID_AMOUNT - AMOUNT) * COMMISSION), 0) as COMMISSIONS FROM (
    SELECT 
    a.FACILITY_ID, 
    IFNULL(a.PAID_AMOUNT, 0) as PAID_AMOUNT,
    IFNULL(b.AMOUNT, 0) as AMOUNT,
    IFNULL(c.COMMISSION, 0) as COMMISSION
    FROM 
    (SELECT 
		a.FACILITY_ID,
        SUM(a.PAID_AMOUNT) as PAID_AMOUNT
	FROM PaidBDS a
    WHERE a.FACILITY_ID IN (SELECT FACILITY_ID FROM Special_Facility_Overrides WHERE REP_ID = VAR_REP_ID) 
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.FACILITY_ID) a
    LEFT JOIN
     (SELECT 
		a.FACILITY_ID,
        SUM(a.AMOUNT) as AMOUNT
	FROM Cogs a
    WHERE a.FACILITY_ID IN (SELECT FACILITY_ID FROM Special_Facility_Overrides WHERE REP_ID = VAR_REP_ID)
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.FACILITY_ID) b ON a.FACILITY_ID = b.FACILITY_ID
    LEFT JOIN Special_Facility_Overrides c ON a.FACILITY_ID = c.FACILITY_ID AND c.REP_ID = VAR_REP_ID) p;    
    
    SET @FACILITYOVERRIDEPAID = (SELECT PAID_AMOUNT FROM FACILITYOVERRIDECOMMISSION);
    SET @FACILITYOVERRIDECOG = (SELECT COGS FROM FACILITYOVERRIDECOMMISSION);
    SET @FACILITYOVERRIDECOMMISSION = (SELECT COMMISSIONS FROM FACILITYOVERRIDECOMMISSION);
    
    
    -- Rep
    DROP TABLE IF EXISTS REPOVERRIDECOMMISSION;
    CREATE TEMPORARY TABLE REPOVERRIDECOMMISSION AS    
    SELECT IFNULL(SUM(PAID_AMOUNT), 0) as PAID_AMOUNT, IFNULL(SUM(AMOUNT), 0) as COGS, IFNULL(SUM((PAID_AMOUNT - AMOUNT) * COMMISSION), 0) as COMMISSIONS FROM (
    SELECT
    IFNULL(a.PAID_AMOUNT, 0) as PAID_AMOUNT,
    IFNULL(b.AMOUNT, 0) as AMOUNT,
    IFNULL(c.COMMISSION, 0) as COMMISSION
    FROM 
    (SELECT 
		a.REP_ID,
        SUM(a.PAID_AMOUNT) as PAID_AMOUNT
	FROM PaidBDS a
    WHERE a.REP_ID IN (SELECT CHILD_REP_ID FROM Special_Rep_Overrides WHERE PARENT_REP_ID = VAR_REP_ID) 
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.REP_ID) a
    LEFT JOIN
     (SELECT 
		a.REP_ID,
        SUM(a.AMOUNT) as AMOUNT
	FROM Cogs a
    WHERE a.REP_ID IN (SELECT CHILD_REP_ID FROM Special_Rep_Overrides WHERE PARENT_REP_ID = VAR_REP_ID) 
    AND a.UPLOAD_MONTH = UPLOAD_MONTH AND a.UPLOAD_YEAR = VAR_UPLOAD_YEAR
    GROUP BY a.REP_ID) b ON a.REP_ID = b.REP_ID
    LEFT JOIN Special_Rep_Overrides c ON a.REP_ID = c.CHILD_REP_ID AND c.PARENT_REP_ID = VAR_REP_ID) p;   
    
	SET @REPOVERRIDEPAID = (SELECT PAID_AMOUNT FROM REPOVERRIDECOMMISSION);
    SET @REPOVERRIDECOG = (SELECT COGS FROM REPOVERRIDECOMMISSION);
    SET @REPOVERRIDECOMMISSION = (SELECT COMMISSIONS FROM REPOVERRIDECOMMISSION);
    
    SELECT * FROM (
    SELECT 'Total Commissions' as LineItem, @INITIALCOMMISSION + @SPECIALCOMMISSION + @FACILITYOVERRIDECOMMISSION + @REPOVERRIDECOMMISSION + @MANUALOVERRIDECOMMISSION as LineValue
    UNION ALL
    SELECT 'Total Paid' as LineItem, @FULLPAID as LineValue
    UNION ALL
    SELECT 'Total Cogs' as LineItem, @FULLCOGS as LineValue
    UNION ALL
    SELECT 'Total Overrides' as LineItem, @FACILITYOVERRIDECOMMISSION + @REPOVERRIDECOMMISSION as LineValue  
    UNION ALL
    SELECT 'Total Manual' as LineItem, @MANUALOVERRIDECOMMISSION as LineValue    
    UNION ALL
    SELECT 'Initial Commission' as LineItem, @INITIALCOMMISSION as LineValue
    UNION ALL
    SELECT 'Facility Overrides' as LineItem, @FACILITYOVERRIDECOMMISSION as LineValue
    UNION ALL
    SELECT 'Rep Overrides' as LineItem, @REPOVERRIDECOMMISSION as LineValue
    UNION ALL
    SELECT 'Special Commissions' as LineItem, @SPECIALCOMMISSION as LineValue;

END$$
DELIMITER ;